//
// This is a generated file, do not edit!
// Generated by R.swift, see https://github.com/mac-cain13/R.swift
//

import Foundation
import RswiftResources
import SFUI
import UIKit

private class BundleFinder {}
let R = _R(bundle: Bundle(for: BundleFinder.self))

struct _R {
  let bundle: Foundation.Bundle
  var color: color { .init(bundle: bundle) }
  var image: image { .init(bundle: bundle) }
  var nib: nib { .init(bundle: bundle) }
  var storyboard: storyboard { .init(bundle: bundle) }

  func color(bundle: Foundation.Bundle) -> color {
    .init(bundle: bundle)
  }
  func image(bundle: Foundation.Bundle) -> image {
    .init(bundle: bundle)
  }
  func nib(bundle: Foundation.Bundle) -> nib {
    .init(bundle: bundle)
  }
  func storyboard(bundle: Foundation.Bundle) -> storyboard {
    .init(bundle: bundle)
  }
  func validate() throws {
    try self.nib.validate()
    try self.storyboard.validate()
  }

  struct project {
    let developmentRegion = "English"
  }

  /// This `_R.color` struct is generated, and contains static references to 22 colors.
  struct color {
    let bundle: Foundation.Bundle

    /// Color `auxiliary`.
    var auxiliary: RswiftResources.ColorResource { .init(name: "auxiliary", path: [], bundle: bundle) }

    /// Color `background`.
    var background: RswiftResources.ColorResource { .init(name: "background", path: [], bundle: bundle) }

    /// Color `balckAlways`.
    var balckAlways: RswiftResources.ColorResource { .init(name: "balckAlways", path: [], bundle: bundle) }

    /// Color `black`.
    var black: RswiftResources.ColorResource { .init(name: "black", path: [], bundle: bundle) }

    /// Color `content`.
    var content: RswiftResources.ColorResource { .init(name: "content", path: [], bundle: bundle) }

    /// Color `darkGray`.
    var darkGray: RswiftResources.ColorResource { .init(name: "darkGray", path: [], bundle: bundle) }

    /// Color `detail`.
    var detail: RswiftResources.ColorResource { .init(name: "detail", path: [], bundle: bundle) }

    /// Color `disabled`.
    var disabled: RswiftResources.ColorResource { .init(name: "disabled", path: [], bundle: bundle) }

    /// Color `divider`.
    var divider: RswiftResources.ColorResource { .init(name: "divider", path: [], bundle: bundle) }

    /// Color `error`.
    var error: RswiftResources.ColorResource { .init(name: "error", path: [], bundle: bundle) }

    /// Color `gray`.
    var gray: RswiftResources.ColorResource { .init(name: "gray", path: [], bundle: bundle) }

    /// Color `highlight`.
    var highlight: RswiftResources.ColorResource { .init(name: "highlight", path: [], bundle: bundle) }

    /// Color `lightGray`.
    var lightGray: RswiftResources.ColorResource { .init(name: "lightGray", path: [], bundle: bundle) }

    /// Color `link`.
    var link: RswiftResources.ColorResource { .init(name: "link", path: [], bundle: bundle) }

    /// Color `placeholder`.
    var placeholder: RswiftResources.ColorResource { .init(name: "placeholder", path: [], bundle: bundle) }

    /// Color `subtitle`.
    var subtitle: RswiftResources.ColorResource { .init(name: "subtitle", path: [], bundle: bundle) }

    /// Color `success`.
    var success: RswiftResources.ColorResource { .init(name: "success", path: [], bundle: bundle) }

    /// Color `theme`.
    var theme: RswiftResources.ColorResource { .init(name: "theme", path: [], bundle: bundle) }

    /// Color `title`.
    var title: RswiftResources.ColorResource { .init(name: "title", path: [], bundle: bundle) }

    /// Color `warning`.
    var warning: RswiftResources.ColorResource { .init(name: "warning", path: [], bundle: bundle) }

    /// Color `white`.
    var white: RswiftResources.ColorResource { .init(name: "white", path: [], bundle: bundle) }

    /// Color `whiteAlways`.
    var whiteAlways: RswiftResources.ColorResource { .init(name: "whiteAlways", path: [], bundle: bundle) }
  }

  /// This `_R.image` struct is generated, and contains static references to 2 images, and 4 namespaces.
  struct image {
    let bundle: Foundation.Bundle

    /// Image `back`.
    var back: RswiftResources.ImageResource { .init(name: "back", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `close`.
    var close: RswiftResources.ImageResource { .init(name: "close", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }
    var arrow: arrow { .init(bundle: bundle) }
    var doc: doc { .init(bundle: bundle) }
    var hud: hud { .init(bundle: bundle) }
    var triangle: triangle { .init(bundle: bundle) }

    func arrow(bundle: Foundation.Bundle) -> arrow {
      .init(bundle: bundle)
    }
    func doc(bundle: Foundation.Bundle) -> doc {
      .init(bundle: bundle)
    }
    func hud(bundle: Foundation.Bundle) -> hud {
      .init(bundle: bundle)
    }
    func triangle(bundle: Foundation.Bundle) -> triangle {
      .init(bundle: bundle)
    }


    /// This `_R.image.arrow` struct is generated, and contains static references to 4 arrows.
    struct arrow {
      let bundle: Foundation.Bundle

      /// Image `arrow/bottom`.
      var bottom: RswiftResources.ImageResource { .init(name: "arrow/bottom", path: ["arrow"], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

      /// Image `arrow/left`.
      var left: RswiftResources.ImageResource { .init(name: "arrow/left", path: ["arrow"], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

      /// Image `arrow/right`.
      var right: RswiftResources.ImageResource { .init(name: "arrow/right", path: ["arrow"], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

      /// Image `arrow/top`.
      var top: RswiftResources.ImageResource { .init(name: "arrow/top", path: ["arrow"], bundle: bundle, locale: nil, onDemandResourceTags: nil) }
    }

    /// This `_R.image.doc` struct is generated, and contains static references to 2 docs.
    struct doc {
      let bundle: Foundation.Bundle

      /// Image `doc/file`.
      var file: RswiftResources.ImageResource { .init(name: "doc/file", path: ["doc"], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

      /// Image `doc/folder`.
      var folder: RswiftResources.ImageResource { .init(name: "doc/folder", path: ["doc"], bundle: bundle, locale: nil, onDemandResourceTags: nil) }
    }

    /// This `_R.image.hud` struct is generated, and contains static references to 6 huds.
    struct hud {
      let bundle: Foundation.Bundle

      /// Image `hud/error`.
      var error: RswiftResources.ImageResource { .init(name: "hud/error", path: ["hud"], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

      /// Image `hud/failure`.
      var failure: RswiftResources.ImageResource { .init(name: "hud/failure", path: ["hud"], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

      /// Image `hud/info`.
      var info: RswiftResources.ImageResource { .init(name: "hud/info", path: ["hud"], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

      /// Image `hud/loading`.
      var loading: RswiftResources.ImageResource { .init(name: "hud/loading", path: ["hud"], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

      /// Image `hud/success`.
      var success: RswiftResources.ImageResource { .init(name: "hud/success", path: ["hud"], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

      /// Image `hud/warning`.
      var warning: RswiftResources.ImageResource { .init(name: "hud/warning", path: ["hud"], bundle: bundle, locale: nil, onDemandResourceTags: nil) }
    }

    /// This `_R.image.triangle` struct is generated, and contains static references to 4 triangles.
    struct triangle {
      let bundle: Foundation.Bundle

      /// Image `triangle/bottom`.
      var bottom: RswiftResources.ImageResource { .init(name: "triangle/bottom", path: ["triangle"], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

      /// Image `triangle/left`.
      var left: RswiftResources.ImageResource { .init(name: "triangle/left", path: ["triangle"], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

      /// Image `triangle/right`.
      var right: RswiftResources.ImageResource { .init(name: "triangle/right", path: ["triangle"], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

      /// Image `triangle/top`.
      var top: RswiftResources.ImageResource { .init(name: "triangle/top", path: ["triangle"], bundle: bundle, locale: nil, onDemandResourceTags: nil) }
    }
  }

  /// This `_R.nib` struct is generated, and contains static references to 1 nibs.
  struct nib {
    let bundle: Foundation.Bundle

    /// Nib `LaunchScreen`.
    var launchScreen: RswiftResources.NibReference<UIKit.UIView> { .init(name: "LaunchScreen", bundle: bundle) }

    func validate() throws {

    }
  }

  /// This `_R.storyboard` struct is generated, and contains static references to 1 storyboards.
  struct storyboard {
    let bundle: Foundation.Bundle
    var main: main { .init(bundle: bundle) }

    func main(bundle: Foundation.Bundle) -> main {
      .init(bundle: bundle)
    }
    func validate() throws {
      try self.main.validate()
    }


    /// Storyboard `Main`.
    struct main: RswiftResources.StoryboardReference, RswiftResources.InitialControllerContainer {
      typealias InitialController = SFUI.SFNavigationController

      let bundle: Foundation.Bundle

      let name = "Main"
      func validate() throws {

      }
    }
  }
}